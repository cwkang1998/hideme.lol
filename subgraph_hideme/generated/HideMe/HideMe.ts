// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CommittedFile extends ethereum.Event {
  get params(): CommittedFile__Params {
    return new CommittedFile__Params(this);
  }
}

export class CommittedFile__Params {
  _event: CommittedFile;

  constructor(event: CommittedFile) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get fileType(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get hash(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get fileTypeString(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class CommittedFileOld extends ethereum.Event {
  get params(): CommittedFileOld__Params {
    return new CommittedFileOld__Params(this);
  }
}

export class CommittedFileOld__Params {
  _event: CommittedFileOld;

  constructor(event: CommittedFileOld) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get hash(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class SaveIpfsCid extends ethereum.Event {
  get params(): SaveIpfsCid__Params {
    return new SaveIpfsCid__Params(this);
  }
}

export class SaveIpfsCid__Params {
  _event: SaveIpfsCid;

  constructor(event: SaveIpfsCid) {
    this._event = event;
  }

  get user(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get fileType(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get cid(): string {
    return this._event.parameters[2].value.toString();
  }

  get fileTypeString(): string {
    return this._event.parameters[3].value.toString();
  }
}

export class HideMe extends ethereum.SmartContract {
  static bind(address: Address): HideMe {
    return new HideMe("HideMe", address);
  }

  DEFAULT_ADMIN_ROLE(): Bytes {
    let result = super.call(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_DEFAULT_ADMIN_ROLE(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "DEFAULT_ADMIN_ROLE",
      "DEFAULT_ADMIN_ROLE():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  RING_BUFFER_SIZE(): i32 {
    let result = super.call(
      "RING_BUFFER_SIZE",
      "RING_BUFFER_SIZE():(uint8)",
      []
    );

    return result[0].toI32();
  }

  try_RING_BUFFER_SIZE(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "RING_BUFFER_SIZE",
      "RING_BUFFER_SIZE():(uint8)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  fileHashRingBuffers(param0: Address, param1: BigInt): BigInt {
    let result = super.call(
      "fileHashRingBuffers",
      "fileHashRingBuffers(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_fileHashRingBuffers(
    param0: Address,
    param1: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "fileHashRingBuffers",
      "fileHashRingBuffers(address,uint256):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromUnsignedBigInt(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role)
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  ringBufferIndexes(param0: Address): i32 {
    let result = super.call(
      "ringBufferIndexes",
      "ringBufferIndexes(address):(uint8)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toI32();
  }

  try_ringBufferIndexes(param0: Address): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "ringBufferIndexes",
      "ringBufferIndexes(address):(uint8)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  userCids(param0: Address, param1: Bytes): string {
    let result = super.call("userCids", "userCids(address,bytes32):(string)", [
      ethereum.Value.fromAddress(param0),
      ethereum.Value.fromFixedBytes(param1)
    ]);

    return result[0].toString();
  }

  try_userCids(param0: Address, param1: Bytes): ethereum.CallResult<string> {
    let result = super.tryCall(
      "userCids",
      "userCids(address,bytes32):(string)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  userFileHashes(param0: Address, param1: Bytes): BigInt {
    let result = super.call(
      "userFileHashes",
      "userFileHashes(address,bytes32):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );

    return result[0].toBigInt();
  }

  try_userFileHashes(
    param0: Address,
    param1: Bytes
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "userFileHashes",
      "userFileHashes(address,bytes32):(uint256)",
      [
        ethereum.Value.fromAddress(param0),
        ethereum.Value.fromFixedBytes(param1)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class CommitFileHashCall extends ethereum.Call {
  get inputs(): CommitFileHashCall__Inputs {
    return new CommitFileHashCall__Inputs(this);
  }

  get outputs(): CommitFileHashCall__Outputs {
    return new CommitFileHashCall__Outputs(this);
  }
}

export class CommitFileHashCall__Inputs {
  _call: CommitFileHashCall;

  constructor(call: CommitFileHashCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get fileTypeString(): string {
    return this._call.inputValues[1].value.toString();
  }

  get hash(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class CommitFileHashCall__Outputs {
  _call: CommitFileHashCall;

  constructor(call: CommitFileHashCall) {
    this._call = call;
  }
}

export class CommitFileHashOldCall extends ethereum.Call {
  get inputs(): CommitFileHashOldCall__Inputs {
    return new CommitFileHashOldCall__Inputs(this);
  }

  get outputs(): CommitFileHashOldCall__Outputs {
    return new CommitFileHashOldCall__Outputs(this);
  }
}

export class CommitFileHashOldCall__Inputs {
  _call: CommitFileHashOldCall;

  constructor(call: CommitFileHashOldCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get hash(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class CommitFileHashOldCall__Outputs {
  _call: CommitFileHashOldCall;

  constructor(call: CommitFileHashOldCall) {
    this._call = call;
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class StoreUserCIDCall extends ethereum.Call {
  get inputs(): StoreUserCIDCall__Inputs {
    return new StoreUserCIDCall__Inputs(this);
  }

  get outputs(): StoreUserCIDCall__Outputs {
    return new StoreUserCIDCall__Outputs(this);
  }
}

export class StoreUserCIDCall__Inputs {
  _call: StoreUserCIDCall;

  constructor(call: StoreUserCIDCall) {
    this._call = call;
  }

  get user(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get cid(): string {
    return this._call.inputValues[1].value.toString();
  }

  get fileTypeString(): string {
    return this._call.inputValues[2].value.toString();
  }
}

export class StoreUserCIDCall__Outputs {
  _call: StoreUserCIDCall;

  constructor(call: StoreUserCIDCall) {
    this._call = call;
  }
}
